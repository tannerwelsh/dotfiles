##
## ENV SETTINGS
##
source ~/.env


##
## GENERAL ZSH CONFIG
## Must come before other settings
##
source "$DOTFILES_DIR/configs/zsh_config"

##
## OS-SPECIFIC CONFIGS
##
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  # For Pop!_OS / Ubuntu
  source "$DOTFILES_DIR/configs/zsh_linux_config"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # For macOS
fi


##
## OH-MY-ZSH CONFIG
##
source "$DOTFILES_DIR/configs/zsh_ohmyzsh_config"


##
## CUSTOM ZSH ALIASES
##
source "$DOTFILES_DIR/configs/zsh_aliases"


##
## LANGUAGE / ENV SETUP SCRIPTS
##

# Ruby / rbenv
# eval "$(rbenv init -)" - not needed b/c provided by ohmyzsh rbenv plugin

# Go: add GOPATH to path (requires go)
if type go &>/dev/null; then
  export PATH=$PATH:$(go env GOPATH)/bin
fi

# FZF: command line fuzzy finder https://github.com/junegunn/fzf
if [[ -f ~/.fzf.zsh ]]; then
  source ~/.fzf.zsh

  # Setting fd/fdfind as default source for fzf (w/o pipe)
  if type fd &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f'
  elif type fdfind &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fdfind --type f'
  else
    export FZF_DEFAULT_COMMAND='find . -type f'
  fi

  # If in git repo, CTRL-T searches git files
  if hub rev-parse --is-inside-work-tree &>/dev/null; then
    export FZF_CTRL_T_COMMAND='git ls-files'
  else
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  fi
fi

# Direnv https://direnv.net
eval "$(direnv hook zsh)"
