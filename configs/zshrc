##
## INTERACTIVE SHELL OPTIONS
##

# Don't store commands starting with a space in history
setopt HIST_IGNORE_SPACE

# Prefer US English and use UTF-8
export LANG="en_US.UTF-8";
export LC_ALL="en_US.UTF-8";

# Highlight section titles in manual pages
export LESS_TERMCAP_md="${yellow}";

# Use 256 colors
export TERM=xterm-256color

##
## OS-SPECIFIC CONFIGS
##
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  # For Pop!_OS / Ubuntu
  source "$DOTFILES_DIR/configs/zsh_linux_config"
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # For macOS
  source "$DOTFILES_DIR/configs/zsh_mac_config"
fi

##
## COMPLETION
##

# Homebrew Shell Completion https://docs.brew.sh/Shell-Completion
# Must happen before compinit is called (which ohmyzsh does)
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

##
## OH-MY-ZSH CONFIG
##
source "$DOTFILES_DIR/configs/zsh_ohmyzsh_config"

##
## CUSTOM ZSH ALIASES
##
source "$DOTFILES_DIR/configs/zsh_aliases"

##
## CUSTOM FUNCTIONS
##
source "$DOTFILES_DIR/configs/zsh_functions"

##
## TOOLS
##

# FZF: command line fuzzy finder https://github.com/junegunn/fzf
if [[ -f ~/.fzf.zsh ]]; then
  source ~/.fzf.zsh

  # Setting fd/fdfind as default source for fzf (w/o pipe)
  if type fdfind &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fdfind --type f'
  elif type fd &>/dev/null; then
    export FZF_DEFAULT_COMMAND='fd --type f'
  else
    export FZF_DEFAULT_COMMAND='find . -type f'
  fi

  # If in git repo, CTRL-T searches git files
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    export FZF_CTRL_T_COMMAND='git ls-files'
  else
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  fi
fi

timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

# GPG (for signing git commits)
export GPG_TTY=$(tty)

# Direnv https://direnv.net
eval "$(direnv hook zsh)"

##
## Finally, remove duplicates in $PATH
##
export PATH=$(consolidate-path "$PATH")
