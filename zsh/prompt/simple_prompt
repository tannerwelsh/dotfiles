#!/usr/bin/env zsh

##
# ZSH Prompt: Simple
#
# Inspiration taken from Purification by Matthieu Cneude
# https://github.com/Phantas0s/purification

# Some useful symbols to know:
# %F => color dict (can use these values: black, red, green, yellow, blue, magenta, cyan, white, default)
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)

git_prompt_status() {
  local INDEX STATUS

  INDEX=$(command git status --porcelain -b 2> /dev/null)
  STATUS=""

  while IFS= read -r line; do
    case "$line" in
      '?? '*)
        [[ "$STATUS" != *"$GIT_PROMPT_UNTRACKED"* ]] && STATUS="$GIT_PROMPT_UNTRACKED$STATUS"
        ;;
      'A '*|'M '*|'MM '*)
        [[ "$STATUS" != *"$GIT_PROMPT_ADDED"* ]] && STATUS="$GIT_PROMPT_ADDED$STATUS"
        ;;
      ' M '*|'AM '*|' T '*)
        [[ "$STATUS" != *"$GIT_PROMPT_MODIFIED"* ]] && STATUS="$GIT_PROMPT_MODIFIED$STATUS"
        ;;
      'R '*)
        [[ "$STATUS" != *"$GIT_PROMPT_RENAMED"* ]] && STATUS="$GIT_PROMPT_RENAMED$STATUS"
        ;;
      ' D '*|'D '*|'AD '*)
        [[ "$STATUS" != *"$GIT_PROMPT_DELETED"* ]] && STATUS="$GIT_PROMPT_DELETED$STATUS"
        ;;
      'UU '*)
        [[ "$STATUS" != *"$GIT_PROMPT_UNMERGED"* ]] && STATUS="$GIT_PROMPT_UNMERGED$STATUS"
        ;;
      '##'*)
        if [[ "$line" == *"ahead"* ]] && [[ "$STATUS" != *"$GIT_PROMPT_AHEAD"* ]]; then
          STATUS="$GIT_PROMPT_AHEAD$STATUS"
        fi
        if [[ "$line" == *"behind"* ]] && [[ "$STATUS" != *"$GIT_PROMPT_BEHIND"* ]]; then
          STATUS="$GIT_PROMPT_BEHIND$STATUS"
        fi
        if [[ "$line" == *"diverged"* ]] && [[ "$STATUS" != *"$GIT_PROMPT_DIVERGED"* ]]; then
          STATUS="$GIT_PROMPT_DIVERGED$STATUS"
        fi
        ;;
    esac
  done <<< "$INDEX"

  if command git rev-parse --verify refs/stash >/dev/null 2>&1; then
    [[ "$STATUS" != *"$GIT_PROMPT_STASHED"* ]] && STATUS="$GIT_PROMPT_STASHED$STATUS"
  fi

  if [[ -z "$STATUS" ]]; then
    STATUS="$GIT_PROMPT_NO_CHANGE"
  fi

  if [[ -n "$STATUS" ]]; then
    echo "$STATUS"
  fi
}

prompt_git_branch() {
    autoload -Uz vcs_info
    precmd_vcs_info() { vcs_info }
    precmd_functions+=( precmd_vcs_info )
    setopt prompt_subst
    zstyle ':vcs_info:git:*' formats '%b'
}

prompt_git_info() {
    [ ! -z "$vcs_info_msg_0_" ] && echo "$GIT_PROMPT_PREFIX%F{black}$vcs_info_msg_0_%f$GIT_PROMPT_SUFFIX"
}

prompt_precommand() {
    # Pass a line before each prompt
    print -P ''
}

simple_prompt() {
    autoload -Uz add-zsh-hook
    add-zsh-hook precmd prompt_precommand

    SYMBOL_PROMPT="Î»"

    SYMBOL_GIT_BRANCH="" # Other options: âŽ‡ ðŸŒ¿Î»
    SYMBOL_GIT_ADDED="+"
    SYMBOL_GIT_MODIFIED="Â±"
    SYMBOL_GIT_DELETED="-"
    SYMBOL_GIT_RENAMED="âžœ"
    SYMBOL_GIT_UNMERGED="Î”"
    SYMBOL_GIT_UNTRACKED="Â¬"
    SYMBOL_GIT_STASHED="âˆ—"
    SYMBOL_GIT_NOCHANGE="âˆ…"

    GIT_PROMPT_PREFIX="%F{black}$SYMBOL_GIT_BRANCH%f"
    GIT_PROMPT_SUFFIX=""
    GIT_PROMPT_DIRTY=""
    GIT_PROMPT_CLEAN=""

    GIT_PROMPT_ADDED="%F{green}$SYMBOL_GIT_ADDED%f "
    GIT_PROMPT_MODIFIED="%F{yellow}$SYMBOL_GIT_MODIFIED%f "
    GIT_PROMPT_DELETED="%F{red}$SYMBOL_GIT_DELETED%f "
    GIT_PROMPT_RENAMED="%F{blue}$SYMBOL_GIT_RENAMED%f "
    GIT_PROMPT_UNMERGED="%F{cyan}$SYMBOL_GIT_UNMERGED%f "
    GIT_PROMPT_UNTRACKED="%F{cyan}$SYMBOL_GIT_UNTRACKED%f "
    GIT_PROMPT_STASHED="%B%F{red}$SYMBOL_GIT_STASHED%f%b "
    GIT_PROMPT_BEHIND="%B%F{red}ï…µ%f%b "
    GIT_PROMPT_AHEAD="%B%F{green}ï…¶%f%b "
    GIT_PROMPT_NO_CHANGE="%F{white}$SYMBOL_GIT_NOCHANGE%f "

    JOBS_COUNT="%(1j.[%j].)"

    prompt_git_branch
    RPROMPT='%F{black}$JOBS_COUNT (%*)%f'
    PROMPT=$'%F{black}%~ on $(prompt_git_info) $(git_prompt_status)
%B%F{white}$SYMBOL_PROMPT%f%b '
}

simple_prompt

